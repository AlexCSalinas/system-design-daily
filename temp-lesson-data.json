{"lesson":{"day":16,"topic":"Service Discovery","title":"Dynamic Service Location in Microservices","summary":"Service discovery enables services to find and communicate with each other dynamically in distributed systems without hardcoded addresses.","key_concepts":["Service Registry","Health Checks","DNS-based Discovery","Load Balancing Integration"],"real_world_example":"Netflix uses Eureka for service discovery, allowing their microservices to dynamically find dependencies across multiple AWS regions","mermaid_diagram":"graph TD\n    Service1[Service A] --> Registry[Service Registry]\n    Service2[Service B] --> Registry\n    Client[Client Service] --> Registry\n    Registry --> Discovery[Discover Service B]\n    Discovery --> Connect[Connect to Service B]","discussion_questions":["How do you handle service discovery during network partitions?","What are the trade-offs between client-side and server-side service discovery?"],"quiz":[{"question":"What is the primary purpose of health checks in service discovery?","options":["Monitor performance","Remove unhealthy services","Load balancing","Security validation"],"correct":1}]},"date":"2025-08-24","lessonIndex":15}