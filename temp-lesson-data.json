{"lesson":{"day":8,"topic":"Database Sharding","title":"Horizontal Database Partitioning","summary":"Sharding distributes data across multiple database instances to handle large datasets and high throughput requirements.","key_concepts":["Shard Key","Hash-based Sharding","Range-based Sharding","Cross-shard Queries"],"real_world_example":"Instagram shards user data by user ID, allowing them to store billions of photos across thousands of database servers","mermaid_diagram":"graph TD\n    App[Application]\n    App --> Shard1[(Shard 1<br/>Users 1-1000)]\n    App --> Shard2[(Shard 2<br/>Users 1001-2000)]\n    App --> Shard3[(Shard 3<br/>Users 2001-3000)]","discussion_questions":["How would you handle resharding when adding new database servers?","What are the challenges of implementing joins across shards?"],"quiz":[{"question":"What is the most important consideration when choosing a shard key?","options":["Data type","Even distribution","Alphabetical order","Timestamp"],"correct":1}]},"date":"2025-09-05","lessonIndex":7}